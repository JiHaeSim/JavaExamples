/*
 * 생성자는 인스터스가 생성될때 호출되는 '인스턴스 초기화 메서드'
 * 
 * <생성자의 조건>
 * 1. 생성자의 이름은 클래스의 이름과 같아야 한다.
 * 2. 생성자는 리턴값이 없다.(void 사용하지 않음)
 * ※ 참고: 생성자도 메서드이기 때문에 리턴값이 없다는 의미의 void를 붙어야 하지만, 
 * 모든 생성자가 리턴값이 없으므로  void를 생략할 수 있게 하엿음 ※
 * 
 * 생성자도 오버로딩이 가능하므로 하나의 클래스에 여러개의 생성자가 존재할 수 있다.
 * (오버로딩: 한 클래스 내에 매개변수의 개수 또는 타입을 달리하여 같은 이름의 메서드를 여러 개 정의하는 것)
 * 
 * 모든 클래스에는 반드시 하나 이상의 생성자가 정의되어 있어야 한다.
 * 앞서 나왔던 예제들에 생성자가 없음에도 인스턴스를 생성할 수 있었던 이유는
 * 컴파일러가 제공하는 '기본 생성자(default constructor)' 덕분이다
 * Data1(){} => 컴파일러가 자동으로 추가해주는 기본 생성자는 매개변수도없고 아무런 내용도 없는 형태이다.
 * ※ 참고: 클래스의 '접근제어자'가  public인 경우에는 기본생성자로 'public 클래스이름(){}'이 추가된다. ※  
 * 
 * CarTest
 * */

//class Data1 {
//	int value;
//}
//
//class Data2 {
//	int value;
//
//	Data2(int x) { 	// 매개변수가 있는 생성자.
//		value = x;
//	}
//}
//
//class ConstructorTest {
//	public static void main(String[] args) {
//		Data1 d1 = new Data1();
//		Data2 d2 = new Data2();		// compile error발생
//	}
//}

//컴파일러가 자동적으로 기본 생성자를추가해주는 경우는 '클래스 내에 생성자가 하나도 없을 때 뿐'!!
